<!--
  ~ AndFHEM - Open Source Android application to control a FHEM home automation
  ~ server.
  ~
  ~ Copyright (c) 2011, Matthias Klass or third-party contributors as
  ~ indicated by the @author tags or express copyright attribution
  ~ statements applied by the authors.  All third-party contributions are
  ~ distributed under license by Red Hat Inc.
  ~
  ~ This copyrighted material is made available to anyone wishing to use, modify,
  ~ copy, or redistribute it subject to the terms and conditions of the GNU GENERAL PUBLIC LICENSE, as published by the Free Software Foundation.
  ~
  ~ This program is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
  ~ or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU GENERAL PUBLIC LICENSE
  ~ for more details.
  ~
  ~ You should have received a copy of the GNU GENERAL PUBLIC LICENSE
  ~ along with this distribution; if not, write to:
  ~   Free Software Foundation, Inc.
  ~   51 Franklin Street, Fifth Floor
  ~   Boston, MA  02110-1301  USA
  -->

<FHZINFO>
    <SWAP_LIST>
        <SWAP name="device" state="27.3°C" sets="regGet regSet
statusRequest readDeviceXML clearUnconfirmed" attrs="room group
comment alias eventMap userReadings IODev ignore:1,0
loglevel:0,1,2,3,4,5,6 event-on-change-reading event-on-update-reading
event-min-interval stateFormat
ProductCode:0000000100000001,0000000100000002,0000000100000003,0000000100000004,0000000100000005,0000000100000006,0000000100000007,0000000100000008,0000000100000009,000000010000000A,000000010000000B,000000010000000C,000000010000000D,000000010000000E,0000001100000001,0000001100000002,0000001100000003,0000001100000004,0000001100000005,0000001600000001,0000001900000001,0000001B00000001,0000001D00000001,0000002200000003,000000220000000F,00000022FFFFFFFF
devStateIcon icon sortby webCmd">
            <INT key="CFGFN" value=""/>
            <INT key="DEF" value="A0"/>
            <INT key="Developer" value="panStamp"/>
            <INT key="LASTInputDev" value="panStick"/>
            <INT key="MSGCNT" value="19313"/>
            <INT key="NAME" value="device"/>
            <INT key="NR" value="49"/>
            <INT key="Product" value="Temperature sensor"/>
            <INT key="STATE" value="27.3°C"/>
            <INT key="SWAP_00-ProductCode" value="0000000100000004"/>
            <INT key="SWAP_00.1-ManufacturerID" value="00000001"/>
            <INT key="SWAP_00.2-ProductID" value="00000004"/>
            <INT key="SWAP_01-HardwareVersion" value="00000200"/>
            <INT key="SWAP_02-FirmwareVersion" value="00000101"/>
            <INT key="SWAP_03-SystemState" value="02"/>
            <INT key="SWAP_04-FrequencyChannel" value="00"/>
            <INT key="SWAP_05-SecurityOption" value="00"/>
            <INT key="SWAP_06-SecurityPassword" value="00"/>
            <INT key="SWAP_07-SecurityNonce" value="E0"/>
            <INT key="SWAP_08-NetworkID" value="B547"/>
            <INT key="SWAP_09-DeviceAddress" value="A0"/>
            <INT key="SWAP_0A-PeriodicTxInterval" value="FFFF"/>
            <INT key="SWAP_MISSED" value="0"/>
            <INT key="SWAP_Sent_unconfirmed" value="2 Sent_unconfirmed"/>
            <INT key="SWAP_lastRcv" value="2013-07-29 20:44:20"/>
            <INT key="SWAP_lastSend" value="2013-07-29 20:19:34"/>
            <INT key="SWAP_nonce" value="15"/>
            <INT key="TRIGGERTIME" value="2013-07-29 20:44:20"/>
            <INT key="TYPE" value="SWAP"/>
            <INT key="addr" value="A0"/>
            <INT key="devices" value=""/>
            <INT key="nonce" value="2"/>
            <INT key="panStick_LQI" value="49"/>
            <INT key="panStick_MSGCNT" value="19313"/>
            <INT key="panStick_RAWMSG" value="(F131)00A0001500A00B0C76"/>
            <INT key="panStick_RSSI" value="-81.5"/>
            <INT key="panStick_TIME" value="2013-07-29 20:44:20"/>
            <INT key="IODev" value="panStick"/>
            <ATTR key="alias" value="TempPhilipp"/>
            <ATTR key="room" value="room"/>
            <ATTR key="stateFormat"
                  value="{sprintf(&quot;%.1f&quot;,hex(ReadingsVal($name,&quot;0C.0-Temperature&quot;,&quot;0&quot;))*0.1-50).&quot;°C&quot;}"/>
            <ATTR key="userReadings"
                  value="voltage:0B-Voltage {hex(ReadingsVal($name,&quot;0B-Voltage&quot;,&quot;0&quot;))*0.001}, temperature:0C.0-Temperature {hex(ReadingsVal($name,&quot;0C.0-Temperature&quot;,&quot;0&quot;))*0.1-50}"/>
            <STATE key="0B-Voltage" value="0C76" measured="2013-07-29 20:44:20"/>
            <STATE key="0C.0-Temperature" value="0305"
                   measured="2013-07-29 20:44:20"/>
            <STATE key="state" value="set-readDeviceXML"
                   measured="2013-07-29 20:21:40"/>
        </SWAP>
    </SWAP_LIST>
</FHZINFO>
